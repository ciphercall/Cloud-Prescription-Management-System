@using System.Data
@using System.Data.SqlClient
@using AslPrescriptionApi.Models
@using System.Web.Optimization
@model AslPrescriptionApi.Models.DTO.PatientDTO


@{
    ViewBag.Title = "Delete";
    if (HttpContext.Current.Session["LoggedUserType"] == null)
    {
        Response.Redirect(Url.Action("Index", "Login"));
    }

    var LoggedUserTp = HttpContext.Current.Session["LoggedUserType"].ToString();
    var LoggedUserStatus = HttpContext.Current.Session["LoggedUserStatus"].ToString();
    var LoggedCompanyStatus = HttpContext.Current.Session["LoggedCompanyStatus"].ToString();

    if ((LoggedUserTp == "CompanyAdmin" || LoggedUserTp == "UserAdmin" || LoggedUserTp == "User") && LoggedUserStatus == "A" && LoggedCompanyStatus == "A")
    {

    }
    else
    {
        Response.Redirect(Url.Action("Index", "Logout"));
    }

    Int64 LoggedCompId = Convert.ToInt64(System.Web.HttpContext.Current.Session["loggedCompID"]);
    AslPrescriptionApiDbContext db = new AslPrescriptionApiDbContext();

    List<SelectListItem> ReferNameList = new List<SelectListItem>();
    var result = (from n in db.RxReferDbSet where n.COMPID == LoggedCompId select n).ToList();
    foreach (var n in result)
    {
        ReferNameList.Add(new SelectListItem { Text = n.REFERNM, Value = n.REFERID.ToString() });
    }
}

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()
    @Html.ValidationSummary(true)

    @Html.HiddenFor(model => model.ID, new { id = "Hiddentxt_pst_Patient_Id" })
    @Html.HiddenFor(model => model.COMPID, new { id = "HiddentxtCompanyID", @Value = LoggedCompId })
    @Html.HiddenFor(model => model.RXPID, new { id = "HiddentxtPATIENTID" })
    @Html.HiddenFor(model => model.TRANSYY, new { id = "HiddentxtPATIENTYY" })

    <div id="contentHeaderBox">
        <h1 style="padding-left:16px">Delete Patient Information</h1>
        @if ((LoggedUserTp == "CompanyAdmin" || LoggedUserTp == "UserAdmin" || LoggedUserTp == "User") && LoggedUserStatus == "A")
        {
            var createStatus = "";
            var updateStatus = "";
            var deleteStatus = "";
            var status = "";
            var loggedUserID = HttpContext.Current.Session["loggedUserID"].ToString();
            System.Data.SqlClient.SqlConnection conn = new System.Data.SqlClient.SqlConnection(System.Configuration.ConfigurationManager.ConnectionStrings["AslPrescriptionApiDbContext"].ToString());

            string query1 = string.Format("SELECT STATUS, INSERTR, UPDATER, DELETER FROM ASL_ROLE WHERE CONTROLLERNAME='Patient' AND COMPID='{0}' AND USERID = '{1}'", LoggedCompId, loggedUserID);

            System.Data.SqlClient.SqlCommand cmd1 = new System.Data.SqlClient.SqlCommand(query1, conn);
            conn.Open();

            SqlDataAdapter da1 = new SqlDataAdapter(cmd1);
            DataTable ds1 = new DataTable();
            da1.Fill(ds1);

            foreach (DataRow row in ds1.Rows)
            {
                status = row["STATUS"].ToString();
                createStatus = row["INSERTR"].ToString();
                updateStatus = row["UPDATER"].ToString();
                deleteStatus = row["DELETER"].ToString();
            }
            conn.Close();


            if (deleteStatus == "A")
            {

            }
            else if (createStatus == "A")
            {
                Response.Redirect("~/Patient/Create");
            }
            else if (updateStatus == "A")
            {
                Response.Redirect("~/Patient/Update");
            }

            if (deleteStatus == "I")
            {
                Response.Redirect("~/GraphView/Index");
            }

            <div class="btn-group pull-right" id="editOption">
                <button type="button" class="btn btn-default dropdown-toggle" data-toggle="dropdown" data-hover="dropdown" aria-expanded="false">
                    <i class="fa fa-cog"></i>
                </button>
                <ul class="dropdown-menu pull-right" style="" role="menu">
                    @if (createStatus == 'A'.ToString() && updateStatus == 'A'.ToString() && deleteStatus == 'A'.ToString())
                    {
                        <li>
                            <a href="@Url.Action("Create", "Patient")"><i class="fa fa-plus"></i> Create</a>
                        </li>
                        <li>
                            <a href="@Url.Action("Update", "Patient")"><i class="fa fa-edit"></i> Update</a>
                        </li>
                        <li>
                            <a href="@Url.Action("Delete", "Patient")"><i class="fa fa-times"></i> Delete</a>
                        </li>
                    }
                    else if (updateStatus == 'A'.ToString() && deleteStatus == 'A'.ToString())
                    {
                        <li>
                            <a href="@Url.Action("Update", "Patient")"><i class="fa fa-edit"></i> Update</a>
                        </li>
                        <li>
                            <a href="@Url.Action("Delete", "Patient")"><i class="fa fa-times"></i> Delete</a>
                        </li>
                    }
                    else if (createStatus == 'A'.ToString() && updateStatus == 'A'.ToString())
                    {
                        <li>
                            <a href="@Url.Action("Create", "Patient")"><i class="fa fa-plus"></i> Create</a>
                        </li>
                        <li>
                            <a href="@Url.Action("Update", "Patient")"><i class="fa fa-edit"></i> Update</a>
                        </li>
                    }
                    else if (createStatus == 'A'.ToString() && deleteStatus == 'A'.ToString())
                    {
                        <li>
                            <a href="@Url.Action("Create", "Patient")"><i class="fa fa-plus"></i> Create</a>
                        </li>
                        <li>
                            <a href="@Url.Action("Delete", "Patient")"><i class="fa fa-times"></i> Delete</a>
                        </li>
                    }
                    else if (createStatus == 'A'.ToString())
                    {
                        <li>
                            <a href="@Url.Action("Create", "Patient")"><i class="fa fa-plus"></i> Create</a>
                        </li>
                    }
                    else if (updateStatus == 'A'.ToString())
                    {
                        <li>
                            <a href="@Url.Action("Update", "Patient")"><i class="fa fa-edit"></i> Update</a>
                        </li>
                    }
                    else if (deleteStatus == 'A'.ToString())
                    {
                        <li>
                            <a href="@Url.Action("Delete", "Patient")"><i class="fa fa-times"></i> Delete</a>
                        </li>
                    }
                </ul>
            </div>


        }

    </div>

    <div class="col-md-12">
        @if (TempData["PatientDeleteMessage"] != null)
        {
            <div class="panel-heading text-center">
                <h4 style="color: #226699">@TempData["PatientDeleteMessage"]</h4>
            </div>
        }

        <div class="form-group">

            <div class="row">
                <div class="col-md-2">
                    @Html.Label("name", "Patient ID", htmlAttributes: new { @class = "control-label" })
                </div>
                <div class="col-md-3">
                    @Html.TextBoxFor(model => model.RXPIDM, htmlAttributes: new { id = "txt_PATIENTIDM", @class = "form-control", autofocus = true })
                </div>
                @if (TempData["selectPatientID"] != null)
                {
                    <div class="col-md-7">
                        <h5 style="color: #C03523">@TempData["selectPatientID"]</h5>
                    </div>
                }
            </div>

            <br />
            <div class="row">
                <div class="col-md-2">
                    @Html.Label("name", "Patient Name", htmlAttributes: new { @class = "control-label" })
                </div>
                <div class="col-md-10">
                    @Html.TextBoxFor(model => model.RXPNM, htmlAttributes: new { id = "txt_PATIENTNM", @class = "form-control", @readonly = "readonly" })
                    @Html.ValidationMessageFor(model => model.RXPNM, "", new { @class = "text-danger" })
                </div>
            </div>

            <br />
            <div class="row">
                <div class="col-md-2">
                    @Html.Label("name", "Address", htmlAttributes: new { @class = "control-label" })
                </div>

                <div class="col-md-10">
                    @Html.TextBoxFor(model => model.ADDRESS, htmlAttributes: new { id = "txt_ADDRESS", @class = "form-control", @readonly = "readonly" })
                    @Html.ValidationMessageFor(model => model.ADDRESS, "", new { @class = "text-danger" })
                </div>
            </div>

            <br />
            <div class="row">
                <div class="col-md-2">
                    @Html.Label("name", "Gender", htmlAttributes: new { @class = "control-label" })
                </div>
                <div class="col-md-4">
                    @Html.TextBoxFor(model => model.GENDER, htmlAttributes: new { id = "txt_GENDER", @class = "form-control", @readonly = "readonly" })
                    @Html.ValidationMessageFor(model => model.GENDER, "", new { @class = "text-danger" })
                </div>
                <div class="col-md-2">
                    @Html.Label("name", "Age", htmlAttributes: new { @class = "control-label" })
                </div>
                <div class="col-md-4">
                    @Html.TextBoxFor(model => model.AGE, htmlAttributes: new { id = "txt_AGE", @class = "form-control", @readonly = "readonly" })
                    @Html.ValidationMessageFor(model => model.AGE, "", new { @class = "text-danger" })
                </div>
            </div>

            <br />
            <div class="row">
                <div class="col-md-2">
                    @Html.Label("name", "Mobile No (1)", htmlAttributes: new { @class = "control-label" })
                </div>

                <div class="col-md-4">
                    @Html.TextBoxFor(model => model.MOBNO1, htmlAttributes: new { id = "txt_MOBNO1", @class = "form-control", @readonly = "readonly" })
                    @Html.ValidationMessageFor(model => model.MOBNO1, "", new { @class = "text-danger" })
                </div>
                <div class="col-md-2">
                    @Html.Label("name", "Mobile No (2)", htmlAttributes: new { @class = "control-label" })
                </div>

                <div class="col-md-4">
                    @Html.TextBoxFor(model => model.MOBNO2, htmlAttributes: new { id = "txt_MOBNO2", @class = "form-control", @readonly = "readonly" })
                    @Html.ValidationMessageFor(model => model.MOBNO2, "", new { @class = "text-danger" })
                </div>
            </div>


            <br />
            <div class="row">
                <div class="col-md-2">
                    @Html.Label("name", "Referer name", htmlAttributes: new { @class = "control-label" })
                </div>
                <div class="col-md-10">
                    @*@Html.DropDownListFor(model => model.REFERID, ReferNameList, "-Select Refer Name-", htmlAttributes: new { id = "txt_REFERID", @class = "form-control", @readonly = "readonly" })*@
                    <input type="text" class="form-control" id="txt_REFERName" readonly="readonly">
                    @*@Html.TextBoxFor(model => model.EMAILID, htmlAttributes: new { id = "txt_REFERID", @class = "form-control", @readonly = "readonly" })*@
                </div>
            </div>

            <br />
            <div class="row">
                <div class="col-md-2">
                    @Html.Label("name", "Remarks", htmlAttributes: new { @class = "control-label" })
                </div>
                <div class="col-md-10">
                    @Html.TextAreaFor(model => model.REMARKS, htmlAttributes: new { id = "txt_REMARKS", @class = "form-control", @readonly = "readonly" })
                </div>
            </div>


            @Html.HiddenFor(model => model.USERPC)
            @Html.HiddenFor(model => model.INSTIME, new { id = "HiddentxtInstime" })
            @Html.HiddenFor(model => model.INSIPNO, new { id = "HiddentxtInsipno" })
            @Html.HiddenFor(model => model.INSLTUDE, new { id = "HiddentxtInsltude" })
            @Html.HiddenFor(model => model.INSUSERID, new { id = "HiddentxtInsuserId" })

            @Html.TextBoxFor(model => model.UPDLTUDE, new { id = "latlon", style = "display: none;" })
            <input id="lat" type="hidden" />
            <input id="lon" type="hidden" />


            <br />
            <div class="row">
                <div class="col-md-3"></div>
                <div class="col-md-6">
                    <input type="submit" class="btn btn-primary btn-block" value="Delete" />
                </div>

            </div>
        </div>
    </div>

                //Latitute & longitude
                <script src="http://maps.google.com/maps/api/js?sensor=false"></script>

                <script language="javascript" type="text/javascript">
                    $(function () {
                        navigator.geolocation.getCurrentPosition(showPosition);
                        //navigator.geolocation.getCurrentPosition(showPosition, positionError);

                        function showPosition(position) {
                            var coordinates = position.coords;
                            $("#lat").val(coordinates.latitude);
                            $("#lon").val(coordinates.longitude);

                            $("#latlon").val(
                                $("#lat").val() + "," + $("#lon").val()
                            );
                        }
                    });

                </script>

                <script type="text/javascript">

                    $(document).ready(function () {
                        $('#txt_PATIENTIDM').autocomplete({

                            source: '@Url.Action("TagSearch", "Patient")',
                            change: $('#txt_PATIENTIDM').keyup(_.debounce(txtOneChanged, 500)),
                            select: function (event, ui) {
                                $("#txt_PATIENTIDM").val(ui.item.label);
                                txtOneChanged();
                            },
                        });
                    });





                    function txtOneChanged() {

                        var changedText = $("#txt_PATIENTIDM").val();
                        var txtBox = document.getElementById('txt_PATIENTIDM');

                        var hiddentxt_pst_Patient_Id = document.getElementById('Hiddentxt_pst_Patient_Id');
                        var hiddentxtCompanyId = document.getElementById('HiddentxtCompanyID');
                        var hiddentxtPATIENTID = document.getElementById('HiddentxtPATIENTID');
                        var HiddentxtPATIENTYY = document.getElementById('HiddentxtPATIENTYY');
                        var txt_PATIENTNM = document.getElementById('txt_PATIENTNM');
                        var txtAddress = document.getElementById('txt_ADDRESS');
                        var txt_GENDER = document.getElementById('txt_GENDER');
                        var txt_AGE = document.getElementById('txt_AGE');
                        var txtMobileNo1 = document.getElementById('txt_MOBNO1');
                        var txtMobileNo2 = document.getElementById('txt_MOBNO2');
                        var txt_REFERName = document.getElementById('txt_REFERName');
                        var txtRemarks = document.getElementById('txt_REMARKS');
                        var txtInseruserId = document.getElementById('HiddentxtInsuserId');
                        var txtInsertime = document.getElementById('HiddentxtInstime');
                        var txtinslutude = document.getElementById('HiddentxtInsltude');
                        var txtinseripno = document.getElementById('HiddentxtInsipno');

                        if (changedText != "") {
                            $.getJSON(
                          '/Patient/keyword', { "ChangedText": changedText },
                           function (myData) {
                               txtBox.value = myData.PATIENTIDM;

                               hiddentxt_pst_Patient_Id.value = myData.pst_Patient_Id;
                               hiddentxtCompanyId.value = myData.COMPID;
                               hiddentxtPATIENTID.value = myData.PATIENTID;
                               HiddentxtPATIENTYY.value = myData.PATIENTYY;
                               txt_PATIENTNM.value = myData.PATIENTNM;
                               txtAddress.value = myData.ADDRESS;
                               txt_GENDER.value = myData.GENDER;
                               if (txt_GENDER.value == "M") {
                                   txt_GENDER.value = "Male";
                               }
                               else if (txt_GENDER.value == "F") {
                                   txt_GENDER.value = "Female";
                               }
                               txt_AGE.value = myData.AGE;
                               txtMobileNo1.value = myData.MOBNO1;
                               txtMobileNo2.value = myData.MOBNO2;
                               txt_REFERName.value = myData.REFERNM;
                               txtRemarks.value = myData.REMARKS;
                               txtInseruserId.value = myData.INSUSERID;
                               txtInsertime.value = myData.INSTIME;
                               txtinslutude.value = myData.INSLTUDE;
                               txtinseripno.value = myData.INSIPNO;
                               //document.getElementById("txt_PATIENTIDM").focus();
                           });
                            $("#Hiddentxt_pst_Patient_Id").val("");
                            $("#HiddentxtCompanyID").val("");
                            $("#HiddentxtPATIENTID").val("");
                            $("#HiddentxtPATIENTYY").val("");

                            $("#txt_PATIENTNM").val("");
                            $("#txt_ADDRESS").val("");
                            $("#txt_GENDER").val("");
                            $("#txt_AGE").val("");
                            $("#txt_MOBNO1").val("");
                            $("#txt_MOBNO2").val("");
                            $("#txt_EMAILID").val("");
                            $("#txt_REFERName").val("");
                            $("#txt_REMARKS").val("");
                        }
                    }
                </script>

                <style type="text/css">
                    .ui-autocomplete {
                        position: absolute;
                        cursor: default;
                        background: #f0ffff;
                        max-height: 200px;
                        overflow-y: auto;
                        /* prevent horizontal scrollbar */
                        overflow-x: hidden;
                        /* add padding to account for vertical scrollbar */
                        padding-right: 20px;
                    }
                </style>




}

<link href="~/Content/themes/base/jquery-ui.css" rel="stylesheet" />
@*<script src="~/Scripts/jquery-1.10.2.min.js"></script>*@
<script src="~/Content/jquery-2.1.4/jquery-2.1.4.min.js"></script>
<script src="~/Scripts/jquery-ui-1.10.4.min.js"></script>
<script src="~/Scripts/Underscore.js"></script>

